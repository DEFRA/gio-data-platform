
trigger: none

pr: none

parameters:
  - name: workItemId
    displayName: "The id of the work item (This will be used in the environment name)"
    type: string
    default: '12345'

resources:
  repositories:
    - repository: PipelineCommon
      name: DEFRA/ado-pipeline-common
      endpoint: DEFRA
      type: github
      ref: refs/tags/1.0.0
    - repository: GIO_DATA_PLATFORM
      name: DEFRA-Common-Platform-Improvements/GIO_DATA_PLATFORM
      type: git
      ref: feat/366609-pureview-improvements

extends:
  template: templates/pipelines/common-infrastructure-deploy.yaml@PipelineCommon
  parameters:
    additionalRepositories:
      -  GIO_DATA_PLATFORM
    variableFiles:
      - /src/config/catalogue/vars/ephemeral.yaml@GIO_DATA_PLATFORM
    deployFromFeature: True
    privateAgentName: DEFRA-COMMON-windows2022-SSV3
    environments:
      - name: 'Ephemeral'
        developmentEnvironment: True
        useDevelopmentEnvironmentForValidationOnly: False
        azureRegions:
          primary: NorthEurope
        serviceConnection: AZD-CPR-DEV1
        privateAgentName: DEFRA-COMMON-windows2022-SSV3
    groupedDeployments:
      - name: Purview_Ephemeral_infra
        deployments:
          - name: purview
            isDeployToSecondaryRegions: false
            path: src/features/catalogue/infra
            type: bicep
            parameterFilePath: src/features/catalogue/infra
            scope: "Resource Group"
            resourceGroupName: $(resourceGroup)
            preDeployScriptsList:
              - displayName: Set the environment name
                type: AzurePowerShell
                inlineScript: |
                  $resourceName =  "$(ephemeralNamePrefix)${{ parameters.workItemId }}"
                  Write-Host "Resource Name $resourceName"
                  Write-Host "##vso[task.setvariable variable=ephemeralNamePrefix;]$resourceName"
            postDeployScriptsList:
              - displayName: Add Permission to ephemeral Group
                type: AzurePowerShell
                inlineScript: |
                  Write-Host $(ephemeralNamePrefix)
                  Install-Module -Name Az.Purview -Force
                  Import-Module -Name Az.Purview
                  Add-AzPurviewAccountRootCollectionAdmin -AccountName $(ephemeralNamePrefix) -ResourceGroupName $(resourceGroup) -ObjectId $(adminGroupId)
              - displayName: 'Configure Collections'
                scriptPath: 'src/infrastructure/scripts/PowerShell/Scripts/Purview/ConfigureCollections.ps1'
                type: AzurePowerShell
                scriptArguments: '-ConfigFilePath "$(Build.SourcesDirectory)/GIO_DATA_PLATFORM/src/config/catalogue/Extract/Collections/collections.json" -ImportConfigPath "$(Build.SourcesDirectory)/GIO_DATA_PLATFORM/src/config/catalogue/importConfig.json" -AccountName $(ephemeralNamePrefix)'
              - displayName: 'Configure Classifications'
                scriptPath: 'src/infrastructure/scripts/PowerShell/Scripts/Purview/ConfigureClassifications.ps1'
                type: AzurePowerShell
                scriptArguments: '-ConfigFilePath "$(Build.SourcesDirectory)/GIO_DATA_PLATFORM/src/config/catalogue/Extract/TypeDefinitions/classifications.json" -AccountName $(ephemeralNamePrefix)'
              - displayName: Display Url to User
                type: AzurePowerShell
                inlineScript: |
                  Write-Host "Your ephemeral Url is https://web.purview.azure.com/resource/$(ephemeralNamePrefix)?feature.tenant=c9d74090-b4e6-4b04-981d-e6757a160812"
              - displayName: 'Create Repo for ephemeral work item'
                type: AzurePowerShell
                inlineScript: |
                  cd "$(Build.SourcesDirectory)/GIO_DATA_PLATFORM"
                  git fetch origin
                  git checkout main
                  git checkout -b feat/${{ parameters.workItemId }}
                  git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin --set-upstream feat/${{ parameters.workItemId }}
